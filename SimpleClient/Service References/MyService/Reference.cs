//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleClient.MyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockInfo", Namespace="http://schemas.datacontract.org/2004/07/StockFinder")]
    [System.SerializableAttribute()]
    public partial class StockInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.IStockLookup")]
    public interface IStockLookup {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockLookup/GetPrice", ReplyAction="http://tempuri.org/IStockLookup/GetPriceResponse")]
        double GetPrice(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockLookup/GetPrice", ReplyAction="http://tempuri.org/IStockLookup/GetPriceResponse")]
        System.Threading.Tasks.Task<double> GetPriceAsync(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockLookup/GetInfo", ReplyAction="http://tempuri.org/IStockLookup/GetInfoResponse")]
        SimpleClient.MyService.StockInfo GetInfo(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockLookup/GetInfo", ReplyAction="http://tempuri.org/IStockLookup/GetInfoResponse")]
        System.Threading.Tasks.Task<SimpleClient.MyService.StockInfo> GetInfoAsync(string symbol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockLookupChannel : SimpleClient.MyService.IStockLookup, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockLookupClient : System.ServiceModel.ClientBase<SimpleClient.MyService.IStockLookup>, SimpleClient.MyService.IStockLookup {
        
        public StockLookupClient() {
        }
        
        public StockLookupClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockLookupClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockLookupClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockLookupClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double GetPrice(string symbol) {
            return base.Channel.GetPrice(symbol);
        }
        
        public System.Threading.Tasks.Task<double> GetPriceAsync(string symbol) {
            return base.Channel.GetPriceAsync(symbol);
        }
        
        public SimpleClient.MyService.StockInfo GetInfo(string symbol) {
            return base.Channel.GetInfo(symbol);
        }
        
        public System.Threading.Tasks.Task<SimpleClient.MyService.StockInfo> GetInfoAsync(string symbol) {
            return base.Channel.GetInfoAsync(symbol);
        }
    }
}
